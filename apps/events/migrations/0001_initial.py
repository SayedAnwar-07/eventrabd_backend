# Generated by Django 5.1.4 on 2025-08-18 12:34

import apps.events.models
import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='EventService',
            fields=[
                ('id', models.CharField(default=apps.events.models.generate_unique_id, editable=False, max_length=8, primary_key=True, serialize=False)),
                ('service_type', models.CharField(choices=[('photography', 'Photography'), ('videography', 'Videography'), ('hall_booking', 'Hall Booking'), ('sound_system', 'Sound System (DJ)'), ('lighting', 'Lighting'), ('chef_booking', 'Chef Booking'), ('catering', 'Catering')], db_index=True, default='photography', max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.CharField(default=apps.events.models.generate_unique_id, editable=False, max_length=8, primary_key=True, serialize=False)),
                ('title', models.CharField(db_index=True, max_length=255, unique=True)),
                ('description', models.TextField()),
                ('logo', models.URLField(blank=True, null=True)),
                ('brand_name', models.CharField(db_index=True, max_length=100, unique=True)),
                ('slug', models.SlugField(blank=True, max_length=255, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('total_views', models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('total_reviews', models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('average_rating', models.DecimalField(decimal_places=2, default=0, max_digits=3, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('daily_views', models.JSONField(default=dict)),
                ('daily_reviews', models.JSONField(default=dict)),
                ('daily_ratings', models.JSONField(default=dict)),
                ('seller', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='events', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='EventGallery',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.URLField()),
                ('is_primary', models.BooleanField(default=False)),
                ('position', models.PositiveSmallIntegerField(default=1)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='gallery_images', to='events.event')),
            ],
            options={
                'verbose_name_plural': 'Event Galleries',
                'ordering': ['position', '-is_primary', 'uploaded_at'],
            },
        ),
        migrations.CreateModel(
            name='EventServiceDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('short_description', models.TextField(max_length=500)),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('is_available', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='service_details', to='events.event')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='events.eventservice')),
            ],
        ),
        migrations.AddIndex(
            model_name='event',
            index=models.Index(fields=['slug'], name='events_even_slug_30eb0f_idx'),
        ),
        migrations.AddIndex(
            model_name='event',
            index=models.Index(fields=['seller', 'is_active'], name='events_even_seller__506dd6_idx'),
        ),
        migrations.AddIndex(
            model_name='event',
            index=models.Index(fields=['brand_name'], name='events_even_brand_n_cbba59_idx'),
        ),
        migrations.AddIndex(
            model_name='eventgallery',
            index=models.Index(fields=['event', 'position'], name='events_even_event_i_b2b6f2_idx'),
        ),
        migrations.AddIndex(
            model_name='eventgallery',
            index=models.Index(fields=['event', 'is_primary'], name='events_even_event_i_20957f_idx'),
        ),
        migrations.AddConstraint(
            model_name='eventgallery',
            constraint=models.UniqueConstraint(fields=('event', 'position'), name='uniq_event_gallery_position'),
        ),
        migrations.AddConstraint(
            model_name='eventservicedetail',
            constraint=models.UniqueConstraint(fields=('event', 'service'), name='uniq_event_service'),
        ),
    ]
